{
        "info": {
                "_postman_id": "nauttec-comprehensive-api",
                "name": "Nauttec Django Backend - Comprehensive API Collection",
                "description": "Complete API collection for Nauttec yacht platform organized by Django apps. Includes authentication, yacht management, bookings, payments, and more.",
                "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
        },
        "variable": [
                {
                        "key": "base_url",
                        "value": "{{base_url}}",
                        "type": "string"
                }
        ],
        "item": [
                {
                        "name": "01. Authentication & Accounts",
                        "description": "User authentication, registration, and account management endpoints",
                        "item": [
                                {
                                        "name": "Register New User",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate random test data",
                                                                        "const randomId = Math.floor(Math.random() * 9999) + 1000;",
                                                                        "const timestamp = Date.now();",
                                                                        "",
                                                                        "// Generate phone number",
                                                                        "const countries = ['+1', '+33', '+34', '+39', '+44'];",
                                                                        "const randomCountry = countries[Math.floor(Math.random() * countries.length)];",
                                                                        "const randomPhone = randomCountry + Math.floor(Math.random() * 900000000 + 100000000);",
                                                                        "",
                                                                        "// Generate user data",
                                                                        "const firstNames = ['Alex', 'Jordan', 'Taylor', 'Casey', 'Morgan', 'Blake'];",
                                                                        "const lastNames = ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia'];",
                                                                        "",
                                                                        "const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];",
                                                                        "const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];",
                                                                        "const email = `${firstName.toLowerCase()}.${lastName.toLowerCase()}${randomId}@nauttec.com`;",
                                                                        "",
                                                                        "// Set environment variables",
                                                                        "pm.environment.set('generated_phone', randomPhone);",
                                                                        "pm.environment.set('generated_email', email);",
                                                                        "pm.environment.set('generated_first_name', firstName);",
                                                                        "pm.environment.set('generated_last_name', lastName);",
                                                                        "",
                                                                        "console.log('Generated User Data:');",
                                                                        "console.log('Phone:', randomPhone);",
                                                                        "console.log('Email:', email);",
                                                                        "console.log('Name:', firstName, lastName);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"phone\": \"{{generated_phone}}\",\n  \"email\": \"{{generated_email}}\",\n  \"first_name\": \"{{generated_first_name}}\",\n  \"last_name\": \"{{generated_last_name}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/auth/register/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "register", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Send OTP Code",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Use generated phone or fallback to test phone",
                                                                        "const phone = pm.environment.get('generated_phone') || pm.environment.get('test_user_phone');",
                                                                        "pm.environment.set('current_phone', phone);",
                                                                        "console.log('Sending OTP to:', phone);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"phone\": \"{{current_phone}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/auth/send-otp/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "send-otp", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Verify OTP Code",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"phone\": \"{{test_user_phone}}\",\n  \"otp_code\": \"123456\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/auth/verify-otp/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "verify-otp", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Set Password",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"phone\": \"{{test_user_phone}}\",\n  \"password\": \"SecurePass123!\",\n  \"password_confirm\": \"SecurePass123!\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/auth/set-password/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "set-password", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "User Login",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"phone\": \"{{test_user_phone}}\",\n  \"password\": \"SecurePass123!\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/auth/login/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "login", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get User Profile",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/auth/profile/?phone={{test_user_phone}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["auth", "profile", ""],
                                                        "query": [
                                                                {
                                                                        "key": "phone",
                                                                        "value": "{{test_user_phone}}"
                                                                }
                                                        ]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "02. Yacht Fleet Management",
                        "description": "Yacht listings, details, and availability management",
                        "item": [
                                {
                                        "name": "List All Yachts",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/boats/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["boats", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Yacht Details",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/boats/{{boat_id}}/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["boats", "{{boat_id}}", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Check Yacht Availability",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/boats/{{boat_id}}/availability/?start_date=2025-09-15&end_date=2025-09-17",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["boats", "{{boat_id}}", "availability", ""],
                                                        "query": [
                                                                {
                                                                        "key": "start_date",
                                                                        "value": "2025-09-15"
                                                                },
                                                                {
                                                                        "key": "end_date",
                                                                        "value": "2025-09-17"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Filter Yachts by Capacity",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/boats/?capacity_min=8&capacity_max=12",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["boats", ""],
                                                        "query": [
                                                                {
                                                                        "key": "capacity_min",
                                                                        "value": "8"
                                                                },
                                                                {
                                                                        "key": "capacity_max",
                                                                        "value": "12"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Filter Yachts by Location",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/boats/?location=Monaco",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["boats", ""],
                                                        "query": [
                                                                {
                                                                        "key": "location",
                                                                        "value": "Monaco"
                                                                }
                                                        ]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "03. Booking Management",
                        "description": "Create, manage, and track yacht bookings with advanced rules engine",
                        "item": [
                                {
                                        "name": "Create New Booking",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate booking data",
                                                                        "const today = new Date();",
                                                                        "const startDate = new Date(today.getTime() + (Math.floor(Math.random() * 30) + 7) * 24 * 60 * 60 * 1000);",
                                                                        "const endDate = new Date(startDate.getTime() + (Math.floor(Math.random() * 4) + 1) * 24 * 60 * 60 * 1000);",
                                                                        "",
                                                                        "const formatDate = (date) => date.toISOString().split('T')[0];",
                                                                        "",
                                                                        "const guestCounts = [2, 4, 6, 8, 10, 12];",
                                                                        "const guestCount = guestCounts[Math.floor(Math.random() * guestCounts.length)];",
                                                                        "",
                                                                        "const occasions = [",
                                                                        "    'Birthday celebration',",
                                                                        "    'Anniversary trip',", 
                                                                        "    'Business meeting',",
                                                                        "    'Family vacation',",
                                                                        "    'Wedding proposal',",
                                                                        "    'Corporate event',",
                                                                        "    'Sunset cruise'",
                                                                        "];",
                                                                        "const occasion = occasions[Math.floor(Math.random() * occasions.length)];",
                                                                        "",
                                                                        "const phone = pm.environment.get('current_phone') || pm.environment.get('test_user_phone');",
                                                                        "",
                                                                        "// Set booking variables",
                                                                        "pm.environment.set('booking_start_date', formatDate(startDate));",
                                                                        "pm.environment.set('booking_end_date', formatDate(endDate));",
                                                                        "pm.environment.set('booking_guest_count', guestCount);",
                                                                        "pm.environment.set('booking_occasion', occasion);",
                                                                        "",
                                                                        "console.log('Generated Booking:');",
                                                                        "console.log('Dates:', formatDate(startDate), 'to', formatDate(endDate));",
                                                                        "console.log('Guests:', guestCount);",
                                                                        "console.log('Occasion:', occasion);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{current_phone}}\",\n  \"boat_id\": {{boat_id}},\n  \"start_date\": \"{{booking_start_date}}\",\n  \"end_date\": \"{{booking_end_date}}\",\n  \"guest_count\": {{booking_guest_count}},\n  \"special_requests\": \"{{booking_occasion}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "List User Bookings",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/?user_phone={{test_user_phone}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Booking Details",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/{{booking_id}}/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", "{{booking_id}}", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Cancel Booking",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{test_user_phone}}\",\n  \"reason\": \"Change of plans\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/{{booking_id}}/cancel/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", "{{booking_id}}", "cancel", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "List All Bookings (Admin)",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/list/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", "list", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Filter Bookings by Status",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/bookings/?status=confirmed",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["bookings", ""],
                                                        "query": [
                                                                {
                                                                        "key": "status",
                                                                        "value": "confirmed"
                                                                }
                                                        ]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "04. Fractional Ownership",
                        "description": "Manage yacht ownership shares, co-owners, and fuel wallets",
                        "item": [
                                {
                                        "name": "Get User Ownership",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/ownership/?user_phone={{test_user_phone_2}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["ownership", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone_2}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Ownership Details",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/ownership/{{ownership_id}}/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["ownership", "{{ownership_id}}", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Fuel Wallet Balance",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/fuel-wallet/?user_phone={{test_user_phone_2}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["fuel-wallet", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone_2}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Purchase Fuel Credits",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate fuel purchase data",
                                                                        "const amounts = ['250.00', '500.00', '750.00', '1000.00', '1500.00', '2000.00'];",
                                                                        "const paymentMethods = ['credit_card', 'debit_card', 'bank_transfer', 'paypal'];",
                                                                        "",
                                                                        "const randomAmount = amounts[Math.floor(Math.random() * amounts.length)];",
                                                                        "const randomPaymentMethod = paymentMethods[Math.floor(Math.random() * paymentMethods.length)];",
                                                                        "",
                                                                        "// Use owner test phone for fuel wallet",
                                                                        "const phone = pm.environment.get('test_user_phone_2');",
                                                                        "",
                                                                        "// Set fuel purchase variables",
                                                                        "pm.environment.set('fuel_amount', randomAmount);",
                                                                        "pm.environment.set('fuel_payment_method', randomPaymentMethod);",
                                                                        "",
                                                                        "console.log('Generated Fuel Purchase:');",
                                                                        "console.log('Amount:', randomAmount);",
                                                                        "console.log('Payment Method:', randomPaymentMethod);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{test_user_phone_2}}\",\n  \"amount\": \"{{fuel_amount}}\",\n  \"payment_method\": \"{{fuel_payment_method}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/fuel-wallet/purchase/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["fuel-wallet", "purchase", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Fuel Wallet Transactions",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/fuel-wallet/transactions/?user_phone={{test_user_phone_2}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["fuel-wallet", "transactions", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone_2}}"
                                                                }
                                                        ]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "05. Payment System",
                        "description": "Stripe payment integration for bookings and services",
                        "item": [
                                {
                                        "name": "Create Payment Intent",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate payment data",
                                                                        "const amounts = [1200, 1800, 2400, 3600, 4800, 7200, 9600];",
                                                                        "const currencies = ['EUR', 'USD', 'GBP'];",
                                                                        "const descriptions = [",
                                                                        "    'Yacht booking payment',",
                                                                        "    'Fractional ownership payment',",
                                                                        "    'Charter booking fee',",
                                                                        "    'Fuel wallet top-up',",
                                                                        "    'Maintenance fee payment',",
                                                                        "    'Premium service fee'",
                                                                        "];",
                                                                        "",
                                                                        "const randomAmount = amounts[Math.floor(Math.random() * amounts.length)];",
                                                                        "const randomCurrency = currencies[Math.floor(Math.random() * currencies.length)];",
                                                                        "const randomDescription = descriptions[Math.floor(Math.random() * descriptions.length)];",
                                                                        "",
                                                                        "const phone = pm.environment.get('current_phone') || pm.environment.get('test_user_phone');",
                                                                        "",
                                                                        "// Set payment variables",
                                                                        "pm.environment.set('payment_amount', randomAmount + '.00');",
                                                                        "pm.environment.set('payment_currency', randomCurrency);",
                                                                        "pm.environment.set('payment_description', randomDescription);",
                                                                        "",
                                                                        "console.log('Generated Payment:');",
                                                                        "console.log('Amount:', randomAmount, randomCurrency);",
                                                                        "console.log('Description:', randomDescription);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{current_phone}}\",\n  \"amount\": \"{{payment_amount}}\",\n  \"currency\": \"{{payment_currency}}\",\n  \"description\": \"{{payment_description}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/payment-intents/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["payment-intents", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Payment History",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/payment-intents/?user_phone={{test_user_phone}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["payment-intents", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Confirm Payment",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{test_user_phone}}\",\n  \"payment_method_id\": \"pm_card_visa\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/payment-intents/{{payment_intent_id}}/confirm/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["payment-intents", "{{payment_intent_id}}", "confirm", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Payment Details",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/payment-intents/{{payment_intent_id}}/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["payment-intents", "{{payment_intent_id}}", ""]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "06. Lead Management & Inquiries",
                        "description": "Customer inquiry capture and lead scoring system",
                        "item": [
                                {
                                        "name": "Submit New Inquiry",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate inquiry data",
                                                                        "const names = ['John Smith', 'Sarah Johnson', 'Michael Brown', 'Emma Davis', 'James Wilson', 'Lisa Garcia'];",
                                                                        "const inquiryTypes = ['fractional_ownership', 'charter', 'full_purchase', 'management'];",
                                                                        "const budgetRanges = ['100000-250000', '250000-500000', '500000-1000000', '1000000-2000000', '2000000+'];",
                                                                        "const timelines = ['immediate', '1_month', '3_months', '6_months', '1_year'];",
                                                                        "const locations = ['Monaco', 'Cannes', 'Saint-Tropez', 'Nice', 'Antibes', 'Marseille'];",
                                                                        "const yachtModels = ['D23', 'D28', 'D33', 'D42', 'D50', 'D60'];",
                                                                        "",
                                                                        "const randomName = names[Math.floor(Math.random() * names.length)];",
                                                                        "const randomType = inquiryTypes[Math.floor(Math.random() * inquiryTypes.length)];",
                                                                        "const randomBudget = budgetRanges[Math.floor(Math.random() * budgetRanges.length)];",
                                                                        "const randomTimeline = timelines[Math.floor(Math.random() * timelines.length)];",
                                                                        "const randomLocation = locations[Math.floor(Math.random() * locations.length)];",
                                                                        "const randomModel = yachtModels[Math.floor(Math.random() * yachtModels.length)];",
                                                                        "",
                                                                        "const email = randomName.toLowerCase().replace(' ', '.') + Math.floor(Math.random() * 999) + '@example.com';",
                                                                        "const phone = '+' + Math.floor(Math.random() * 50 + 1) + Math.floor(Math.random() * 900000000 + 100000000);",
                                                                        "const message = `Interested in ${randomType.replace('_', ' ')} of a De Antonio ${randomModel} yacht in ${randomLocation}`;",
                                                                        "",
                                                                        "// Set inquiry variables",
                                                                        "pm.environment.set('inquiry_name', randomName);",
                                                                        "pm.environment.set('inquiry_email', email);", 
                                                                        "pm.environment.set('inquiry_phone', phone);",
                                                                        "pm.environment.set('inquiry_type', randomType);",
                                                                        "pm.environment.set('inquiry_budget', randomBudget);",
                                                                        "pm.environment.set('inquiry_timeline', randomTimeline);",
                                                                        "pm.environment.set('inquiry_location', randomLocation);",
                                                                        "pm.environment.set('inquiry_message', message);",
                                                                        "",
                                                                        "console.log('Generated Inquiry:');",
                                                                        "console.log('Contact:', randomName, '-', email);",
                                                                        "console.log('Interest:', randomType, 'Budget:', randomBudget);",
                                                                        "console.log('Timeline:', randomTimeline, 'Location:', randomLocation);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"name\": \"{{inquiry_name}}\",\n  \"email\": \"{{inquiry_email}}\",\n  \"phone\": \"{{inquiry_phone}}\",\n  \"inquiry_type\": \"{{inquiry_type}}\",\n  \"budget_range\": \"{{inquiry_budget}}\",\n  \"timeline\": \"{{inquiry_timeline}}\",\n  \"message\": \"{{inquiry_message}}\",\n  \"preferred_location\": \"{{inquiry_location}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/inquiries/submit/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["inquiries", "submit", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "List All Inquiries",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/inquiries/list/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["inquiries", "list", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Inquiry Details",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/inquiries/{{inquiry_id}}/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["inquiries", "{{inquiry_id}}", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Filter Qualified Leads",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/inquiries/list/?qualified_only=true&min_score=60",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["inquiries", "list", ""],
                                                        "query": [
                                                                {
                                                                        "key": "qualified_only",
                                                                        "value": "true"
                                                                },
                                                                {
                                                                        "key": "min_score",
                                                                        "value": "60"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Lead Sources Analytics",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/inquiries/sources/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["inquiries", "sources", ""]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "07. Notification System",
                        "description": "In-app notifications and messaging system",
                        "item": [
                                {
                                        "name": "Get User Notifications",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/notifications/?user_phone={{test_user_phone}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["notifications", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Mark Notification as Read",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{test_user_phone}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/notifications/{{notification_id}}/read/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["notifications", "{{notification_id}}", "read", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Send Test Notification",
                                        "event": [
                                                {
                                                        "listen": "prerequest",
                                                        "script": {
                                                                "exec": [
                                                                        "// Auto-generate notification data",
                                                                        "const titles = [",
                                                                        "    'Booking Confirmation',",
                                                                        "    'Payment Successful',",
                                                                        "    'Weather Update',",
                                                                        "    'Maintenance Schedule',",
                                                                        "    'New Yacht Available',",
                                                                        "    'Share Trading Alert'",
                                                                        "];",
                                                                        "const messages = [",
                                                                        "    'Your yacht booking has been confirmed for next week',",
                                                                        "    'Payment has been processed successfully',",
                                                                        "    'Perfect sailing conditions expected tomorrow',",
                                                                        "    'Scheduled maintenance completed on your yacht',",
                                                                        "    'New De Antonio D42 now available for fractional ownership',",
                                                                        "    'A co-owner is interested in selling their share'",
                                                                        "];",
                                                                        "const priorities = ['low', 'medium', 'high'];",
                                                                        "const types = ['booking', 'payment', 'weather', 'maintenance', 'general', 'trading'];",
                                                                        "",
                                                                        "const randomTitle = titles[Math.floor(Math.random() * titles.length)];",
                                                                        "const randomMessage = messages[Math.floor(Math.random() * messages.length)];",
                                                                        "const randomPriority = priorities[Math.floor(Math.random() * priorities.length)];",
                                                                        "const randomType = types[Math.floor(Math.random() * types.length)];",
                                                                        "",
                                                                        "const phone = pm.environment.get('current_phone') || pm.environment.get('test_user_phone');",
                                                                        "",
                                                                        "// Set notification variables",
                                                                        "pm.environment.set('notification_title', randomTitle);",
                                                                        "pm.environment.set('notification_message', randomMessage);",
                                                                        "pm.environment.set('notification_priority', randomPriority);",
                                                                        "pm.environment.set('notification_type', randomType);",
                                                                        "",
                                                                        "console.log('Generated Notification:');",
                                                                        "console.log('Title:', randomTitle);",
                                                                        "console.log('Priority:', randomPriority, 'Type:', randomType);"
                                                                ]
                                                        }
                                                }
                                        ],
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{current_phone}}\",\n  \"title\": \"{{notification_title}}\",\n  \"message\": \"{{notification_message}}\",\n  \"priority\": \"{{notification_priority}}\",\n  \"notification_type\": \"{{notification_type}}\"\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/notifications/test/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["notifications", "test", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Get Notification Preferences",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/notifications/preferences/?user_phone={{test_user_phone}}",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["notifications", "preferences", ""],
                                                        "query": [
                                                                {
                                                                        "key": "user_phone",
                                                                        "value": "{{test_user_phone}}"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Update Notification Preferences",
                                        "request": {
                                                "method": "PUT",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"user_phone\": \"{{test_user_phone}}\",\n  \"email_notifications\": true,\n  \"sms_notifications\": false,\n  \"push_notifications\": true,\n  \"marketing_emails\": false\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/notifications/preferences/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["notifications", "preferences", ""]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "08. Health Monitoring & Testing",
                        "description": "System health checks and comprehensive testing endpoints",
                        "item": [
                                {
                                        "name": "Basic Health Check",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/health/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["health", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Database Health Check",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/health/database/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["health", "database", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "API Status Check",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/health/api/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["health", "api", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Comprehensive System Test",
                                        "request": {
                                                "method": "POST",
                                                "header": [
                                                        {
                                                                "key": "Content-Type",
                                                                "value": "application/json"
                                                        }
                                                ],
                                                "body": {
                                                        "mode": "raw",
                                                        "raw": "{\n  \"test_user_phone\": \"{{test_user_phone}}\",\n  \"run_comprehensive_tests\": true\n}"
                                                },
                                                "url": {
                                                        "raw": "{{base_url}}/health/test-systems/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["health", "test-systems", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Legacy Health Check",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/healthz/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["healthz", ""]
                                                }
                                        }
                                }
                        ]
                },
                {
                        "name": "09. Admin & Analytics",
                        "description": "Administrative endpoints and platform analytics",
                        "item": [
                                {
                                        "name": "Platform Statistics",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/admin/stats/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["admin", "stats", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "User Analytics",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/admin/users/analytics/",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["admin", "users", "analytics", ""]
                                                }
                                        }
                                },
                                {
                                        "name": "Booking Analytics",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/admin/bookings/analytics/?period=30d",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["admin", "bookings", "analytics", ""],
                                                        "query": [
                                                                {
                                                                        "key": "period",
                                                                        "value": "30d"
                                                                }
                                                        ]
                                                }
                                        }
                                },
                                {
                                        "name": "Revenue Analytics",
                                        "request": {
                                                "method": "GET",
                                                "header": [],
                                                "url": {
                                                        "raw": "{{base_url}}/admin/revenue/analytics/?period=30d",
                                                        "host": ["{{base_url}}"],
                                                        "path": ["admin", "revenue", "analytics", ""],
                                                        "query": [
                                                                {
                                                                        "key": "period",
                                                                        "value": "30d"
                                                                }
                                                        ]
                                                }
                                        }
                                }
                        ]
                }
        ]
}