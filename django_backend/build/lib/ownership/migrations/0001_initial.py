# Generated by Django 4.2.7 on 2025-08-26 18:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('yachts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OwnershipOpportunity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('share_fraction', models.CharField(choices=[('1/8', '1/8 Share (48 days)'), ('1/6', '1/6 Share (60 days)'), ('1/4', '1/4 Share (90 days)'), ('1/3', '1/3 Share (120 days)'), ('1/2', '1/2 Share (180 days)')], max_length=10)),
                ('share_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_shares', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('available_shares', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('usage_days_per_year', models.IntegerField(help_text='Annual usage days per share')),
                ('usage_hours_per_year', models.IntegerField(default=50, help_text='Annual engine hours per share')),
                ('financing_available', models.BooleanField(default=True)),
                ('down_payment_percent', models.DecimalField(decimal_places=2, default=20.0, max_digits=5)),
                ('financing_term_months', models.IntegerField(default=60)),
                ('monthly_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('monthly_maintenance_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('insurance_fee_annual', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('mooring_fee_annual', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('launch_date', models.DateTimeField()),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                ('marketing_headline', models.CharField(max_length=200)),
                ('marketing_description', models.TextField()),
                ('key_benefits', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('yacht', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_opportunities', to='yachts.yacht')),
            ],
            options={
                'db_table': 'ownership_opportunities',
                'ordering': ['yacht__model', '-share_price'],
            },
        ),
        migrations.CreateModel(
            name='SharePurchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shares_purchased', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('financing_used', models.BooleanField(default=False)),
                ('down_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('annual_days_used', models.IntegerField(default=0)),
                ('annual_hours_used', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('usage_year', models.IntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('contract_signed', models.BooleanField(default=False)),
                ('contract_date', models.DateTimeField(blank=True, null=True)),
                ('share_certificate_issued', models.BooleanField(default=False)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='ownership.ownershipopportunity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_purchases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'share_purchases',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='ShareTransfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shares_to_transfer', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('asking_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('right_of_first_refusal_expires', models.DateTimeField()),
                ('existing_owners_notified', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('right_of_first_refusal', 'Right of First Refusal Period'), ('approved', 'Approved'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=30)),
                ('listed_date', models.DateTimeField(auto_now_add=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('admin_approved', models.BooleanField(default=False)),
                ('transfer_fee', models.DecimalField(decimal_places=2, default=500.0, max_digits=6)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shares_bought', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares_sold', to=settings.AUTH_USER_MODEL)),
                ('share_purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='ownership.sharepurchase')),
            ],
            options={
                'db_table': 'share_transfers',
                'ordering': ['-listed_date'],
            },
        ),
        migrations.CreateModel(
            name='OwnershipWaitlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('desired_shares', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('max_price_per_share', models.DecimalField(decimal_places=2, max_digits=12)),
                ('priority_level', models.CharField(choices=[('standard', 'Standard'), ('high', 'High Priority'), ('vip', 'VIP')], default='standard', max_length=20)),
                ('notify_email', models.BooleanField(default=True)),
                ('notify_sms', models.BooleanField(default=False)),
                ('auto_purchase', models.BooleanField(default=False, help_text='Auto-purchase if shares become available')),
                ('is_active', models.BooleanField(default=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist', to='ownership.ownershipopportunity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_waitlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ownership_waitlist',
                'ordering': ['priority_level', 'created_at'],
                'unique_together': {('opportunity', 'user')},
            },
        ),
    ]
